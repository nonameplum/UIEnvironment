{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Additional-Resources","level":2,"type":"heading","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/nonameplum\/UIEnvironment"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environment"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/nonameplum\/UIEnvironment\/tree\/main\/XcodeProject"}]}]}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"UIEnvironment"},{"type":"text","text":" property wrapper to read a value stored in a view’s environment. Indicate the value to read using an "},{"type":"codeVoice","code":"UIEnvironmentValues"},{"type":"text","text":" key path in the property declaration. For example, you can create a property that reads the user interface style of the current view using the key path of the "},{"type":"codeVoice","code":"userInterfaceStyle"},{"type":"text","text":" property:"}]},{"type":"codeListing","syntax":"swift","code":["final class ViewController: UIViewController {","    @UIEnvironment(\\.userInterfaceStyle) private var userInterfaceStyle","    ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can condition a view’s content on the associated value, which you read from the declared property by directly referring from it:"}]},{"type":"codeListing","syntax":"swift","code":["override func viewDidLoad() {","    super.viewDidLoad()","    view.backgroundColor = userInterfaceStyle ? .black : .white","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the value changes, UIEnvironment framework updates any view that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentUpdating"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For example, that might happen in the above example if the user changes the Appearance settings."}]},{"type":"codeListing","syntax":"swift","code":["final class ViewController: UIViewController {","    @UIEnvironment(\\.userInterfaceStyle) private var userInterfaceStyle","    ...","}","","extension ViewController: UIEnvironmentUpdating {","    func updateEnvironment() {","        view.backgroundColor = userInterfaceStyle ? .black : .white","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/uienvironment"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A framework that mimics the SwiftUI view’s environment to replicate the value distribution thought your UIKit view hierarchy."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"UIEnvironment","title":"UIEnvironment","symbolKind":"module","role":"collection","modules":[{"name":"UIEnvironment"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentKey","doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentUpdating","doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentable"]},{"title":"Structures","identifiers":["doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironment","doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentValues"]}],"references":{"doc://com.plum.UIEnvironment/documentation/UIEnvironment/UIEnvironmentable":{"role":"symbol","title":"UIEnvironmentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIEnvironmentable"}],"abstract":[{"type":"text","text":"An interface for a view\/view controller that uses "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment"},{"type":"text","text":" property."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIEnvironmentable"}],"url":"\/documentation\/uienvironment\/uienvironmentable"},"doc://com.plum.UIEnvironment/documentation/UIEnvironment":{"role":"collection","title":"UIEnvironment","abstract":[{"type":"text","text":"A framework that mimics the SwiftUI view’s environment to replicate the value distribution thought your UIKit view hierarchy."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment","kind":"symbol","type":"topic","url":"\/documentation\/uienvironment"},"doc://com.plum.UIEnvironment/documentation/UIEnvironment/UIEnvironmentValues":{"role":"symbol","title":"UIEnvironmentValues","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIEnvironmentValues"}],"abstract":[{"type":"text","text":"A collection of environment values propagated through a view\/view controller hierarchy."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentValues","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIEnvironmentValues"}],"url":"\/documentation\/uienvironment\/uienvironmentvalues"},"doc://com.plum.UIEnvironment/documentation/UIEnvironment/UIEnvironmentKey":{"role":"symbol","title":"UIEnvironmentKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIEnvironmentKey"}],"abstract":[{"type":"text","text":"A key for accessing values in the environment."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIEnvironmentKey"}],"url":"\/documentation\/uienvironment\/uienvironmentkey"},"doc://com.plum.UIEnvironment/documentation/UIEnvironment/UIEnvironmentUpdating":{"role":"symbol","title":"UIEnvironmentUpdating","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIEnvironmentUpdating"}],"abstract":[{"type":"text","text":"An interface for a view\/view controller that uses "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment"},{"type":"text","text":" property"},{"type":"text","text":" "},{"type":"text","text":"and wants to update on the environment changes."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironmentUpdating","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIEnvironmentUpdating"}],"url":"\/documentation\/uienvironment\/uienvironmentupdating"},"https://github.com/nonameplum/UIEnvironment/tree/main/XcodeProject":{"title":"Example App","titleInlineContent":[{"type":"text","text":"Example App"}],"type":"link","identifier":"https:\/\/github.com\/nonameplum\/UIEnvironment\/tree\/main\/XcodeProject","url":"https:\/\/github.com\/nonameplum\/UIEnvironment\/tree\/main\/XcodeProject"},"https://developer.apple.com/documentation/swiftui/environment":{"title":"SwiftUI @Environment","titleInlineContent":[{"type":"text","text":"SwiftUI @Environment"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environment","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/environment"},"doc://com.plum.UIEnvironment/documentation/UIEnvironment/UIEnvironment":{"role":"symbol","title":"UIEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIEnvironment"}],"abstract":[{"type":"text","text":"A property wrapper that reads a value from a UIKit view’s environment."}],"identifier":"doc:\/\/com.plum.UIEnvironment\/documentation\/UIEnvironment\/UIEnvironment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIEnvironment"}],"url":"\/documentation\/uienvironment\/uienvironment"},"https://github.com/nonameplum/UIEnvironment":{"title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"type":"link","identifier":"https:\/\/github.com\/nonameplum\/UIEnvironment","url":"https:\/\/github.com\/nonameplum\/UIEnvironment"}}}